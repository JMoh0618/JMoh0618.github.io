<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>前端面试知识点（css）</title>
      <link href="/article/f28d6656.html"/>
      <url>/article/f28d6656.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-display：none与visibility-hidden区别"><a href="#1-display：none与visibility-hidden区别" class="headerlink" title="1.display：none与visibility:hidden区别"></a>1.display：none与visibility:hidden区别</h3><p><strong>题目：</strong>display：none与visibility:hidden区别？</p><blockquote><p><strong>答案：</strong>display: none不占据空间，即不在文档流中，而visibility:hidden还在文档流中。</p><p>display: none子元素不可见。visibility:hidden的子元素如果设置visibility:visible则还可以看到。</p></blockquote><h3 id="2-隐藏元素的方法"><a href="#2-隐藏元素的方法" class="headerlink" title="2.隐藏元素的方法"></a>2.隐藏元素的方法</h3><p><strong>题目：</strong>有哪些隐藏元素的方法？</p><blockquote><p><strong>答案：</strong>display: none  ;  visibility: hidden  ;  opacity: 0  ;</p><p>也可以用left: -9999px或者transform: translateX(-9999px);将元素移出视口外部。</p></blockquote><h3 id="3-css画三角形"><a href="#3-css画三角形" class="headerlink" title="3.css画三角形"></a>3.css画三角形</h3><p><strong>题目：</strong>使用css画一个三角形</p><p><strong>答案：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>test<span class="tag">&lt;/<span class="name">title</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css">  </span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#triangle</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="comment">/*1.内容区面积为0*/</span>  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">0</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">0</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="comment">/*2.设置边框样式*/</span>  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">10px</span> solid;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-color</span>: white white red white;  </span></span><br><span class="line"><span class="language-css">        &#125;  </span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-盒模型"><a href="#4-盒模型" class="headerlink" title="4.盒模型"></a>4.盒模型</h3><p><strong>题目：</strong>介绍下css的盒模型。</p><p>标准盒模型和怪异盒模型是什么？</p><p>ie 盒模型和 w3c 盒模型的区别 如何使用ie的盒模型</p><blockquote><p><strong>答案：</strong>CSS把每个元素视为一个盒子，每个盒子包括分为内容（content）、填充（padding）、外边界区（margin）、边框区（border）四个部分。这种对界面元素的抽象，称为盒模型。</p><p>有两种盒模型：IE盒模型（也称怪异盒模型）（border-box）、W3C标准盒模型（content-box）</p><p>IE盒模型和W3C标准盒模型的区别：</p><p>W3C标准盒模型：属性width，height只包含内容content，不包含border和padding。</p><p>W3C标准盒模型元素宽度实际占有的位置大小：width+左右padding+左右border+左右margin</p><p>IE盒模型：属性width，height包含content、border和padding，指的是content +padding+border。</p><p>IE盒模型元素的宽度：width（content+border+padding）+margin</p></blockquote><h3 id="5-盒模型盒子的宽度计算"><a href="#5-盒模型盒子的宽度计算" class="headerlink" title="5. 盒模型盒子的宽度计算"></a>5. 盒模型盒子的宽度计算</h3><p><strong>题目：</strong>一个盒子，宽度设为100px，padding设为100px，整个在页面占多少px？</p><blockquote><p><strong>答案：</strong>盒子宽度 = width + padding + border + marign。</p><p>由于padding包括padding-left和padding-right，</p><p>所以这个盒子水平占据100px + 100px*2 +0 +0 = 300px</p></blockquote><h3 id="6-有哪些CSS选择器"><a href="#6-有哪些CSS选择器" class="headerlink" title="6.有哪些CSS选择器"></a>6.有哪些CSS选择器</h3><p><strong>题目：</strong>介绍一下都有哪些CSS选择器。</p><blockquote><p><strong>答案：</strong></p><p>1、id选择器（#id）</p><p>2、类选择器（.name）</p><p>3、标签选择器（div,h1,p）</p><p>4、后代选择器（h1 p）后代选择器的祖先和后代之间用空格分割</p><p>5、相邻后代选择器（子）选择器（ul&gt;li）</p><p>6、兄弟选择器（li~a）</p><p>7、相邻兄弟选择器（li+a）</p><p>8、属性选择器（a[rel=”external”]）</p><p>9、伪类选择器（a:hover,li:nth-child）</p><p>10、伪元素选择器（::before、 ::after）</p><p>11、通配符选择器（*）</p></blockquote><h3 id="7-CSS样式优先级"><a href="#7-CSS样式优先级" class="headerlink" title="7.CSS样式优先级"></a>7.CSS样式优先级</h3><p><strong>题目：</strong>说一下CSS优先级的计算规则？</p><blockquote><p><strong>答案：</strong>CSS规范为不同类型的<a href="https://so.csdn.net/so/search?q=%E9%80%89%E6%8B%A9%E5%99%A8&spm=1001.2101.3001.7020">选择器</a>定义了特殊性权重，特殊性权重越高，样式会被优先应用。</p><p>第一等级：代表 内联样式，如 style=””，权值为 1,0,0,0；</p><p>第二等级：代表 ID选择器，如 #id=””, 权值为 0,1,0,0；</p><p>第三等级：代表 calss | 伪类 | 属性 选择器，如 .class | :hover,:link,:target | [type], 权值 为0,0,1,0；</p><p>第四等级：代表 标签 | 伪元素 选择器，如 p | ::after, ::before, ::fist-inline, ::selection, 权值 为0,0,0,1；</p><p>此外，通用选择器（*），子选择器（&gt;）， 相邻同胞选择器（+）等选择器不在4等级之内，所以它们的权值都为 0,0,0,0；</p><p>对于每条CSS规则，生成一个优先级四元组&lt;内联,ID,Class|属性|伪类,元素选择器&gt;。</p><p>每一位的数值计算方法是，在规则中选择器出现的个数。</p><p>两条规则之间对比，从左到右对比，数值大的规则优先级高。</p><p>如果某一位相同，对比下一位。</p></blockquote><h3 id="8-css优先级计算"><a href="#8-css优先级计算" class="headerlink" title="8.css优先级计算"></a>8.css优先级计算</h3><p><strong>题目：</strong>判断以下选择器优先级顺序</p><p>1、#foo div</p><p>2、#foo .bar div</p><p>3、#foo~.bar div</p><blockquote><p><strong>答案：</strong>根据知识点中介绍，这3个选择器优先级计算结果为：</p><p>0,1,0,1</p><p>0,1,1,1</p><p>0,1,1,1</p><p>后两个优先级计算结果相同，则后出现的优先级更高</p></blockquote><h3 id="9-div-div-div-div-gt-div-gt-div优先级"><a href="#9-div-div-div-div-gt-div-gt-div优先级" class="headerlink" title="9.div .div #div div&gt;div&gt;div优先级"></a>9.div .div #div div&gt;div&gt;div优先级</h3><p><strong>题目：</strong>div, .div, #div, div&gt;div&gt;div这几个选择器优先级排序？</p><blockquote><p><strong>答案：</strong>根据知识点中介绍，这4个选择器优先级计算结果为：</p><p>① 0,0,0,1</p><p>② 0,0,1,0</p><p>③ 0,1,0,0</p><p>④ 0,0,0,3</p><p>因此优先级排序为③, ②, ④, ①</p></blockquote><h3 id="10-为什么不推荐用多层css选择器"><a href="#10-为什么不推荐用多层css选择器" class="headerlink" title="10.为什么不推荐用多层css选择器"></a>10.为什么不推荐用多层css选择器</h3><p><strong>题目：</strong>为什么不推荐用多层css选择器？</p><blockquote><p><strong>答案：</strong>由于选择器的匹配需要在整个DOM树中查找节点，层级越高性能越低，因此不建议CSS选择器层级太多。</p></blockquote><h3 id="11-css选择器处理"><a href="#11-css选择器处理" class="headerlink" title="11.css选择器处理"></a>11.css选择器处理</h3><p><strong>题目：</strong>div .child p是是从左边往右边开始定位还是从右边往左边开始？为什么？</p><blockquote><p><strong>答案：</strong>当存在后代选择器时候，CSS选择器的匹配是从右往左的，原因是从左往右匹配的话，需要遍历DOM树，可能会有多次回溯，而从右往左的话，先匹配所有的子节点选择器，然后向上查找，这样性能更好。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Html+CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Html+CSS </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅谈浅拷贝和深拷贝</title>
      <link href="/article/47599914.html"/>
      <url>/article/47599914.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-数据类型"><a href="#1-数据类型" class="headerlink" title="1.数据类型"></a>1.数据类型</h3><p>1.数据的基本类型分为基本数据类型(String, Number, Boolean, Null, Undefined，Symbol)和引用数据类型(Function,Array,Object)</p><p>2.基本数据类型的特点：直接存储在栈(stack)中的数据；引用数据类型的特点：<strong>存储的是该对象在栈中引用，真实的数据存放在堆内存里</strong></p><img src="/article/47599914/tp1.jpg" class> <p>引用数据类型在栈中存储了指针，该指针指向堆中该实体的起始地址。当解释器寻找引用值时，会首先检索其在栈中的地址，取得地址后从堆中获得实体。</p><h3 id="2-浅拷贝和深拷贝的概念"><a href="#2-浅拷贝和深拷贝的概念" class="headerlink" title="2.浅拷贝和深拷贝的概念"></a>2.浅拷贝和深拷贝的概念</h3><p><strong>1.深拷贝和浅拷贝是只针对Object和Array这样的引用数据类型</strong></p><p><strong>2.概念：</strong></p><p>​    <strong>浅拷贝</strong> ：只复制指向某个对象的指针，而不复制对象本身，相当于是新建了一个对象，该对象复制了原对象的指针，新旧对象还是共用同一个堆内存地址</p><p>​    <strong>深拷贝</strong>：是新建一个一模一样的对象，该对象与原对象不共享内存，修改新对象也不会影响原对象</p><h3 id="3-赋值和浅拷贝"><a href="#3-赋值和浅拷贝" class="headerlink" title="3.赋值和浅拷贝"></a>3.赋值和浅拷贝</h3><p><strong>1.赋值：</strong></p><p>当我们把一个对象赋值给一个新的变量时，<strong>赋的其实是该对象的在栈内存中的地址，而不是堆内存中的数据</strong>。也就是两个对象指向的是同一个存储空间，无论哪个对象发生改变，其实都是改变都是同一个堆内存空间</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个obj1对象</span></span><br><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">   <span class="string">&#x27;name&#x27;</span> : <span class="string">&#x27;hello&#x27;</span>,</span><br><span class="line">   <span class="string">&#x27;age&#x27;</span> :  <span class="string">&#x27;20&#x27;</span>,</span><br><span class="line">   <span class="string">&#x27;language&#x27;</span> : [<span class="string">&#x27;a&#x27;</span>,[<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>],[<span class="number">1</span>,<span class="number">2</span>]],</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//把obj1赋值给obj2</span></span><br><span class="line"><span class="keyword">var</span> obj2 = obj1;</span><br><span class="line"><span class="comment">//修改obj2的数据</span></span><br><span class="line">obj2.<span class="property">name</span> = <span class="string">&quot;world&quot;</span>;</span><br><span class="line">obj2.<span class="property">language</span>[<span class="number">1</span>] = [<span class="string">&quot;你&quot;</span>,<span class="string">&quot;好&quot;</span>];</span><br><span class="line"><span class="comment">//打印输出</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;obj1：&#x27;</span>,obj1)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;obj2：&#x27;</span>,obj2)</span><br></pre></td></tr></table></figure><img src="/article/47599914/tp2.png" class> <p>以上，可以看出当你把obj1赋值给obj2后，因为赋值后的对象obj2赋值的是原对象obj1的栈内存地址，在对obj2的数据进行修改后,原数据obj1的值也进行了改变。</p><p><strong>2.浅拷贝：</strong></p><p>浅拷贝是按位拷贝对象，<strong>它会创建一个新对象</strong>，这个对象有着原始对象属性值的一份精确拷贝。如果属性是<strong>基本类型</strong>，拷贝的就是<strong>基本类型的值</strong>；如果属性是<strong>内存地址（引用类型）</strong>，拷贝的就是<strong>内存地址</strong> ，因此如果其中一个对象改变了这个地址，就会影响到另一个对象。即默认拷贝构造函数只是对对象进行浅拷贝复制(逐个成员依次拷贝)，即只复制对象空间而不复制资源。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个obj1对象</span></span><br><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">   <span class="string">&#x27;name&#x27;</span> : <span class="string">&#x27;hello&#x27;</span>,</span><br><span class="line">   <span class="string">&#x27;age&#x27;</span> :  <span class="string">&#x27;20&#x27;</span>,</span><br><span class="line">   <span class="string">&#x27;language&#x27;</span> : [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>],</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 把obj1浅拷贝为obj3</span></span><br><span class="line"><span class="keyword">var</span> obj3 = <span class="title function_">shallowCopy</span>(obj1)</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">shallowCopy</span> (src)&#123;</span><br><span class="line"> <span class="keyword">var</span> newObj = &#123;&#125;;</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">var</span> prop <span class="keyword">in</span> src )&#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(prop)</span><br><span class="line"><span class="comment">//hasOwnProperty(propertyName)方法 是用来检测属性是否为对象的自有属性，如果是，返回true，否者false;</span></span><br><span class="line"><span class="comment">//参数propertyName指要检测的属性名；</span></span><br><span class="line">     <span class="keyword">if</span>(src.<span class="title function_">hasOwnProperty</span>(prop))&#123;</span><br><span class="line">         newObj[prop] = src[prop]</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> newObj</span><br><span class="line">&#125;</span><br><span class="line"> obj3.<span class="property">name</span> = <span class="string">&#x27;world&#x27;</span></span><br><span class="line"> obj3.<span class="property">language</span>[<span class="number">0</span>] = <span class="string">&#x27;ddd&#x27;</span></span><br><span class="line">   </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;obj1&quot;</span>, obj1);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;obj3&quot;</span>, obj3); </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上，可以看出在进行浅拷贝之后，对obj3基本类型的值name进行修改，而原对象obj1的值name并没有改变，而对obj3的引用类型language进行修改后，原对象obj1的值language发生了改变。</p><p>所以，浅拷贝是对原对象的属性值进行精准复制，如果原对象的属性值是<strong>基本类型</strong>，那就是值的引用，所以浅拷贝后修改基本类型不会修改到原对象的，如果原对象属性值是<strong>引用类型</strong>，那么就是对引用类型属性值的栈内存的复制，所以修改引用类型属性值的时候会修改到原对象。</p><h3 id="4-浅拷贝的方式"><a href="#4-浅拷贝的方式" class="headerlink" title="4.浅拷贝的方式"></a>4.浅拷贝的方式</h3><p><strong>1.Object.assign()</strong></p><p>Object.assign() 方法可以把任意多个的源对象自身的可枚举属性拷贝给目标对象，然后返回目标对象。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&#x27;hello&#x27;</span>,</span><br><span class="line"><span class="attr">age</span>: <span class="number">20</span>,</span><br><span class="line"><span class="attr">hobby</span>: &#123;</span><br><span class="line"><span class="attr">ball</span>: <span class="string">&#x27;a&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> obj2 = <span class="title class_">Object</span>.<span class="title function_">assign</span>(&#123;&#125;,obj1)</span><br><span class="line">obj2.<span class="property">name</span> = <span class="string">&#x27;world&#x27;</span></span><br><span class="line">obj2.<span class="property">hobby</span>.<span class="property">ball</span> = <span class="string">&#x27;b&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;obj1&#x27;</span>, obj1.<span class="property">name</span>) <span class="comment">//hello</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;obj2&#x27;</span>, obj2.<span class="property">name</span>) <span class="comment">//world</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;obj1&#x27;</span>, obj1.<span class="property">hobby</span>.<span class="property">ball</span>) <span class="comment">//b</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;obj2&#x27;</span>, obj2.<span class="property">hobby</span>.<span class="property">ball</span>) <span class="comment">//b</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong>当object只有一层的时候，是深拷贝</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">   <span class="attr">name</span>: <span class="string">&#x27;hello&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> obj2 = <span class="title class_">Object</span>.<span class="title function_">assign</span>(&#123;&#125;,obj);</span><br><span class="line">obj2.<span class="property">username</span> = <span class="string">&#x27;world&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj);<span class="comment">//name:hello</span></span><br></pre></td></tr></table></figure><p><strong>2.Array.prototype.slice()</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, &#123;</span><br><span class="line">   <span class="attr">name</span>: <span class="string">&#x27; hello&#x27;</span></span><br><span class="line">&#125;];</span><br><span class="line"><span class="keyword">let</span> arr3 = arr.<span class="title function_">slice</span>();</span><br><span class="line">arr3[<span class="number">2</span>].<span class="property">name</span> = <span class="string">&#x27;world&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);<span class="comment">//name:world</span></span><br></pre></td></tr></table></figure><p><strong>3.Array.prototype.concat()</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, &#123;</span><br><span class="line">   <span class="attr">name</span>: <span class="string">&#x27;hello&#x27;</span></span><br><span class="line">&#125;];</span><br><span class="line"><span class="keyword">let</span> arr2=arr.<span class="title function_">concat</span>();    </span><br><span class="line">arr2[<span class="number">2</span>].<span class="property">name</span> = <span class="string">&#x27;world&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);<span class="comment">//name:world</span></span><br></pre></td></tr></table></figure><h3 id="5-深拷贝的方式"><a href="#5-深拷贝的方式" class="headerlink" title="5.深拷贝的方式"></a>5.深拷贝的方式</h3><p><strong>1.JSON.parse(JSON.stringify())</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>,&#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&#x27;hello&#x27;</span></span><br><span class="line">&#125;];</span><br><span class="line"><span class="keyword">let</span> arr1 = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(arr))</span><br><span class="line">arr1[<span class="number">2</span>].<span class="property">name</span> = <span class="string">&#x27;world&#x27;</span></span><br><span class="line">arr1[<span class="number">0</span>] = <span class="number">5</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr[<span class="number">2</span>].<span class="property">name</span>) <span class="comment">//hello</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr[<span class="number">0</span>]) <span class="comment">//1</span></span><br></pre></td></tr></table></figure><p>原理就是用JSON.stringify将对象转成JSON字符串，再用JSON.parse()把字符串解析成对象，一去一来，新的对象产生了，而且对象会开辟新的栈内存，</p><p><strong>缺点</strong>：当对象里面有函数的话，深拷贝后，函数会消失</p><p><strong>2.手写递归函数实现深拷贝</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123; <span class="comment">//原数据，包含字符串、对象、函数、数组等不同的类型</span></span><br><span class="line"><span class="attr">name</span>: <span class="string">&quot;hello&quot;</span>,</span><br><span class="line"><span class="attr">main</span>: &#123;</span><br><span class="line"><span class="attr">a</span>: <span class="number">1</span>,</span><br><span class="line"><span class="attr">b</span>: <span class="number">2</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">fn</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;&#125;,</span><br><span class="line"><span class="attr">friends</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, [<span class="number">4</span>, <span class="number">5</span>]]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">copy</span>(<span class="params">obj</span>) &#123;</span><br><span class="line"><span class="comment">//声明一个变量用来储存拷贝之后的内容</span></span><br><span class="line"><span class="keyword">let</span> newobj = <span class="literal">null</span>; </span><br><span class="line"><span class="comment">//判断数据类型是否是复杂类型，如果是则调用自己，再次循环，如果不是，直接赋值即可，</span></span><br><span class="line"><span class="comment">//由于null不可以循环但类型又是object，所以这个需要对null进行判断</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_">typeof</span>(obj) == <span class="string">&#x27;object&#x27;</span> &amp;&amp; obj !== <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="comment">//声明一个变量用以储存拷贝出来的值,根据参数的具体数据类型声明不同的类型来储存</span></span><br><span class="line">newobj = obj <span class="keyword">instanceof</span> <span class="title class_">Array</span> ? [] : &#123;&#125;;</span><br><span class="line"><span class="comment">//循环obj 中的每一项，如果里面还有复杂数据类型，则直接利用递归再次调用copy函数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> obj) &#123;</span><br><span class="line">newobj[i] = <span class="title function_">copy</span>(obj[i])</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">newobj = obj</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> newobj; <span class="comment">//函数必须有返回值，否则结构为undefined</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj2 = <span class="title function_">copy</span>(obj)</span><br><span class="line">obj2.<span class="property">name</span> = <span class="string">&#x27;world&#x27;</span></span><br><span class="line">obj2.<span class="property">main</span>.<span class="property">a</span> = <span class="number">100</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj2)</span><br></pre></td></tr></table></figure><img src="/article/47599914/tp3.png" class> <p><strong>递归方法实现深度克隆原理</strong>：遍历对象、数组直到里边都是基本数据类型，然后再去复制，就是深度拷贝</p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue+Node.js实现简单的前后端交互</title>
      <link href="/article/39fd23a9.html"/>
      <url>/article/39fd23a9.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-搭建Vue项目"><a href="#1-搭建Vue项目" class="headerlink" title="1.搭建Vue项目"></a>1.搭建Vue项目</h3><p>1.在cmd中运行 vue ui，按照自己想要的配置进行搭建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue ui</span><br></pre></td></tr></table></figure><p>2.在vue项目的根目录下安装axios 和Element UI</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install axios --save</span><br><span class="line">npm i element-ui -S</span><br></pre></td></tr></table></figure><p>3.安装完成后，在main.js中引入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span><span class="comment">//引入axios</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">$axios</span> = axios;<span class="comment">//把axios挂载到vue上</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementUI</span> <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-ui/lib/theme-chalk/index.css&#x27;</span>;</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">ElementUI</span>);</span><br></pre></td></tr></table></figure><h3 id="2-搭建Node-js项目"><a href="#2-搭建Node-js项目" class="headerlink" title="2.搭建Node.js项目"></a>2.搭建Node.js项目</h3><p>1.新建一个 server 文件夹，作为项目的根目录，并运行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></table></figure><p>2.安装 express，cors</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i express@4.17.1</span><br><span class="line">npm i cors@2.8.5</span><br></pre></td></tr></table></figure><p>3.在项目根目录新建 app.js 作为入口文件，并写入如下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="comment">// 创建express服务器实例</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"><span class="comment">// 导入cors 中间件</span></span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">&#x27;cors&#x27;</span>)</span><br><span class="line"><span class="comment">// cors注册为全局中间件</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cors</span>())</span><br><span class="line"><span class="comment">// 解析application/x-www-form-urlencoded 格式</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">urlencoded</span>(&#123;<span class="attr">exrended</span>:<span class="literal">false</span>&#125;))</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="string">&#x27;3008&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;api server running at http://127.0.0.1:3008&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>3.在项目根目录，新建 router 文件夹，存放路由模块；新建router_handler文件夹，存放路由处理函数模块</p><p>4.在router文件夹中，新建 user.js  文件，作为用户的路由模块，并写入如下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="comment">// 导入router</span></span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>()</span><br><span class="line"><span class="comment">// 暴露</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router</span><br></pre></td></tr></table></figure><p>5.在 app.js 中导入并使用路由模块</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入并使用路由模块</span></span><br><span class="line"><span class="keyword">const</span> userRouter = <span class="built_in">require</span>(<span class="string">&#x27;./router/user&#x27;</span>)</span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&#x27;/api&#x27;</span>,userRouter)</span><br></pre></td></tr></table></figure><p>6.在 router_handler 文件夹中，新建 userhandler.js ，作为存放用户路由处理函数模块</p><h3 id="3-配置MySQL模块"><a href="#3-配置MySQL模块" class="headerlink" title="3.配置MySQL模块"></a>3.配置MySQL模块</h3><p>1.安装mysql模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i mysql@2.18.1</span><br></pre></td></tr></table></figure><p>2.在 server 文件中 新建 /db/index.js 文件，创建数据库连接对象：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入mysql模块</span></span><br><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>)</span><br><span class="line"><span class="comment">// 配置数据库</span></span><br><span class="line"><span class="keyword">const</span> db = mysql.<span class="title function_">createPool</span>(&#123;</span><br><span class="line">    <span class="attr">host</span>:<span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="attr">user</span>:<span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    <span class="attr">password</span>:<span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">    <span class="attr">database</span>:<span class="string">&#x27;test&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 暴露</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = db</span><br></pre></td></tr></table></figure><h3 id="4-编写接口"><a href="#4-编写接口" class="headerlink" title="4.编写接口"></a>4.编写接口</h3><p>1.在 \router_handler\userHeandler.js 中导入 index.js 数据库文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入index文件</span></span><br><span class="line"><span class="keyword">const</span> db = <span class="built_in">require</span>(<span class="string">&#x27;../db/index&#x27;</span>)</span><br></pre></td></tr></table></figure><p>2.使用exports对象，编写 路由处理函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询用户信息</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">getUserInfo</span> = <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> sql = <span class="string">`select * from t_user`</span></span><br><span class="line">    db.<span class="title function_">query</span>(sql,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            res.<span class="title function_">send</span>(&#123;<span class="attr">code</span>:<span class="number">201</span>,<span class="attr">message</span>:<span class="string">&#x27;查询失败&#x27;</span>&#125;)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            res.<span class="title function_">send</span>(&#123; <span class="attr">code</span>: <span class="number">200</span>, <span class="attr">message</span>: <span class="string">&#x27;查询成功&#x27;</span>,<span class="attr">data</span>:results&#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.在 \router\user.js 中导入userHandler文件并使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入userHandler文件并使用</span></span><br><span class="line"><span class="keyword">const</span> userHandler = <span class="built_in">require</span>(<span class="string">&#x27;../router_handler/userHeandler&#x27;</span>)</span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/user/list&#x27;</span>,userHandler.<span class="property">getUserInfo</span>)</span><br></pre></td></tr></table></figure><p>4.运行app.js，使用postman调试接口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node app.js</span><br></pre></td></tr></table></figure><p>5.编写其他接口函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//新增用户</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">addUserInfo</span> = <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> data = req.<span class="property">body</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">    <span class="keyword">const</span> sql = <span class="string">`insert into t_user(u_name,u_email,u_sex,u_province,u_hobby) values(&#x27;<span class="subst">$&#123;data.u_name&#125;</span>&#x27;,&#x27;<span class="subst">$&#123;data.u_email&#125;</span>&#x27;,&#x27;<span class="subst">$&#123;data.u_sex&#125;</span>&#x27;,&#x27;<span class="subst">$&#123;data.u_province&#125;</span>&#x27;,&#x27;<span class="subst">$&#123;data.u_hobby&#125;</span>&#x27;)`</span></span><br><span class="line">    db.<span class="title function_">query</span>(sql,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            res.<span class="title function_">send</span>(&#123;<span class="attr">code</span>:<span class="number">201</span>,<span class="attr">message</span>:<span class="string">&#x27;新增失败&#x27;</span>&#125;)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            res.<span class="title function_">send</span>(&#123; <span class="attr">code</span>: <span class="number">200</span>, <span class="attr">message</span>: <span class="string">&#x27;新增成功&#x27;</span>&#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除用户</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">deleteUserInfo</span> = <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> data = req.<span class="property">body</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">    <span class="keyword">const</span> sql = <span class="string">`delete from t_user where u_id = &#x27;<span class="subst">$&#123;data.u_id&#125;</span>&#x27;`</span></span><br><span class="line">    db.<span class="title function_">query</span>(sql,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            res.<span class="title function_">send</span>(&#123;<span class="attr">code</span>:<span class="number">201</span>,<span class="attr">message</span>:<span class="string">&#x27;删除失败&#x27;</span>&#125;)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            res.<span class="title function_">send</span>(&#123; <span class="attr">code</span>: <span class="number">200</span>, <span class="attr">message</span>: <span class="string">&#x27;删除成功&#x27;</span>&#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6.在 \router\user.js 中使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/user/add&#x27;</span>,userHandler.<span class="property">addUserInfo</span>)</span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/user/delete&#x27;</span>,userHandler.<span class="property">deleteUserInfo</span>)</span><br></pre></td></tr></table></figure><h3 id="5-Vue实现页面渲染"><a href="#5-Vue实现页面渲染" class="headerlink" title="5.Vue实现页面渲染"></a>5.Vue实现页面渲染</h3><p>1.在 src 文件夹下，新建一个 /api/index.js 和 /api/api.js</p><p>2.在 index.js 中导入 axios 并获取后端地址：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入axios</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> serve = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">    <span class="attr">baseURL</span>:<span class="string">&quot;http://127.0.0.1:3008/api&quot;</span>,</span><br><span class="line">    <span class="attr">timeout</span>:<span class="number">3000</span>,</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> serve</span><br></pre></td></tr></table></figure><p>3.在 api.js 中导入index.js文件，并封装接口</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> serve <span class="keyword">from</span> <span class="string">&#x27;../api/index&#x27;</span></span><br><span class="line"><span class="keyword">import</span> qs <span class="keyword">from</span> <span class="string">&#x27;qs&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取用户信息</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getUserInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">serve</span>(&#123;</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&#x27;/user/list&#x27;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.在vue文件中使用接口</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取用户信息</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">getUserList</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;<span class="attr">data</span>:res&#125; = <span class="keyword">await</span> <span class="title function_">getUserInfo</span>()</span><br><span class="line"><span class="keyword">if</span> (res.<span class="property">code</span> != <span class="number">200</span>) <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(<span class="string">&quot;查询用户失败！&quot;</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">tableData</span> = res.<span class="property">data</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="6-Vue页面代码汇总"><a href="#6-Vue页面代码汇总" class="headerlink" title="6.Vue页面代码汇总"></a>6.Vue页面代码汇总</h3><p>1.HomeView.js页面代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;home&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> @<span class="attr">submit.prevent</span>=<span class="string">&quot;demo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;home-form&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.u_name&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>邮箱：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.u_email&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>性别：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">              <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">v-model</span>=<span class="string">&quot;userInfo.u_sex&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">name</span>=<span class="string">&quot;u_sex&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">value</span>=<span class="string">&quot;男&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span>男</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">              <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">v-model</span>=<span class="string">&quot;userInfo.u_sex&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">name</span>=<span class="string">&quot;u_sex&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">value</span>=<span class="string">&quot;女&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span>女</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">              <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">v-model</span>=<span class="string">&quot;userInfo.u_sex&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">name</span>=<span class="string">&quot;u_sex&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">value</span>=<span class="string">&quot;未知&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span>未知</span><br><span class="line">          <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>省份：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.u_province&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;湖北省&quot;</span>&gt;</span>湖北省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;上海市&quot;</span>&gt;</span>上海市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;重庆市&quot;</span>&gt;</span>重庆市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;湖南省&quot;</span>&gt;</span>湖南省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>爱好：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">              <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">v-model</span>=<span class="string">&quot;userInfo.u_hobby&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">value</span>=<span class="string">&quot;篮球&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span>篮球</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">              <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">v-model</span>=<span class="string">&quot;userInfo.u_hobby&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">value</span>=<span class="string">&quot;读书&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span>读书</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">              <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">v-model</span>=<span class="string">&quot;userInfo.u_hobby&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">value</span>=<span class="string">&quot;插画&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span>插画</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">              <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">v-model</span>=<span class="string">&quot;userInfo.u_hobby&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">value</span>=<span class="string">&quot;编程&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span>编程</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">              <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">v-model</span>=<span class="string">&quot;userInfo.u_hobby&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">value</span>=<span class="string">&quot;弹琴&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span>弹琴</span><br><span class="line">          <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;home-box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;tableData&quot;</span> <span class="attr">border</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;u_id&quot;</span> <span class="attr">label</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;u_name&quot;</span> <span class="attr">label</span>=<span class="string">&quot;用户名&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;u_email&quot;</span> <span class="attr">label</span>=<span class="string">&quot;邮箱&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;u_sex&quot;</span> <span class="attr">label</span>=<span class="string">&quot;性别&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;u_province&quot;</span> <span class="attr">label</span>=<span class="string">&quot;省份&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;u_hobby&quot;</span> <span class="attr">label</span>=<span class="string">&quot;爱好&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;操作&quot;</span>&gt;</span> </span><br><span class="line">          <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span> =<span class="string">&quot;deleteuser(scope.row.u_id)&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; getUserInfo,postAddUser,deleteUser&#125; <span class="keyword">from</span> <span class="string">&quot;../api/api&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;HomeView&quot;</span>,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">userInfo</span>: &#123;</span><br><span class="line">        <span class="attr">u_name</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">u_email</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">u_sex</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">u_province</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">u_hobby</span>: [],</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">tableData</span>:[]</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">created</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">getUserList</span>()</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">getUserList</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="keyword">const</span> &#123;<span class="attr">data</span>:res&#125; = <span class="keyword">await</span> <span class="title function_">getUserInfo</span>()</span><br><span class="line">      <span class="keyword">if</span> (res.<span class="property">code</span> != <span class="number">200</span>) <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(<span class="string">&quot;查询用户失败！&quot;</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">tableData</span> = res.<span class="property">data</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">demo</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">//JSON.stringify() 将数据转换为json字符串</span></span><br><span class="line">      <span class="keyword">const</span> &#123;<span class="attr">data</span>:res&#125; = <span class="keyword">await</span> <span class="title function_">postAddUser</span>(<span class="variable language_">this</span>.<span class="property">userInfo</span>) </span><br><span class="line">      <span class="keyword">if</span> (res.<span class="property">code</span> != <span class="number">200</span>) <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(<span class="string">&quot;新增用户失败！&quot;</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">getUserList</span>() </span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">deleteuser</span>(<span class="params">id</span>)&#123;</span><br><span class="line">      <span class="keyword">const</span> confirmResult = <span class="keyword">await</span> <span class="variable language_">this</span>.$confirm(</span><br><span class="line">        <span class="string">&quot;此操作将删除该用户, 是否继续?&quot;</span>,</span><br><span class="line">        <span class="string">&quot;提示&quot;</span>,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">confirmButtonText</span>: <span class="string">&quot;确定&quot;</span>,</span><br><span class="line">          <span class="attr">cancelButtonText</span>: <span class="string">&quot;取消&quot;</span>,</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&quot;warning&quot;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">      ).<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> err);</span><br><span class="line">      <span class="keyword">if</span> (confirmResult !== <span class="string">&quot;confirm&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">info</span>(<span class="string">&quot;已取消删除&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">const</span> data = &#123;</span><br><span class="line">        u_id : id</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">const</span> &#123;<span class="attr">data</span>:res&#125; = <span class="keyword">await</span> <span class="title function_">deleteUser</span>(data) </span><br><span class="line">      <span class="keyword">if</span> (res.<span class="property">code</span> != <span class="number">200</span>) <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(<span class="string">&quot;删除用户失败！&quot;</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">getUserList</span>();</span><br><span class="line">      </span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;style scoped&gt;</span><br><span class="line"><span class="selector-class">.home-form</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">60%</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">align-content</span>: center;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.home-form</span> <span class="selector-tag">table</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.home-form</span> <span class="selector-tag">button</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.home-box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">60%</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">align-content</span>: center;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.home-box</span> <span class="selector-class">.el-table</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.api.js代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> serve <span class="keyword">from</span> <span class="string">&#x27;../api/index&#x27;</span></span><br><span class="line"><span class="keyword">import</span> qs <span class="keyword">from</span> <span class="string">&#x27;qs&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取用户信息</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getUserInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">serve</span>(&#123;</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&#x27;/user/list&#x27;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//新增用户</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">postAddUser</span>(<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">serve</span>(&#123;</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&#x27;/user/add&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>:qs.<span class="title function_">stringify</span>(data)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 删除用户</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">deleteUser</span>(<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">serve</span>(&#123;</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&#x27;/user/delete&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>:qs.<span class="title function_">stringify</span>(data)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-效果展示"><a href="#7-效果展示" class="headerlink" title="7.效果展示"></a>7.效果展示</h3><img src="/article/39fd23a9/xg.gif" class title="效果展示"> ]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
            <tag> Vue </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
